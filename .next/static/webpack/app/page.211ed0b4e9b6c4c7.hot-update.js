"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./app/api/meals/route.ts":
/*!********************************!*\
  !*** ./app/api/meals/route.ts ***!
  \********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DELETE: () => (/* binding */ DELETE),\n/* harmony export */   GET: () => (/* binding */ GET),\n/* harmony export */   createMeal: () => (/* binding */ createMeal),\n/* harmony export */   runtime: () => (/* binding */ runtime)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(app-pages-browser)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var mysql2_promise__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! mysql2/promise */ \"(app-pages-browser)/../node_modules/mysql2/promise.js\");\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"(app-pages-browser)/./node_modules/next/dist/build/polyfills/process.js\");\n// IMPORTANT: This file must be in /app/api/meals/route.ts\n// Make sure this is a server-side API route, not a client component\n\n\n// Dynamic import to ensure mysql2 is only loaded on the server\nconst getMysqlConnection = async ()=>{\n    const mysql = await Promise.resolve(/*! import() */).then(__webpack_require__.t.bind(__webpack_require__, /*! mysql2/promise */ \"(app-pages-browser)/../node_modules/mysql2/promise.js\", 19));\n    return mysql.default;\n};\n// Database configuration\nconst dbConfig_old = {\n    host: process.env.DB_HOST || 'localhost',\n    user: process.env.DB_USER || 'root',\n    password: process.env.DB_PASSWORD || '',\n    database: process.env.DB_NAME || 'calorie-compass',\n    port: parseInt(process.env.DB_PORT || '3306'),\n    waitForConnections: true,\n    connectionLimit: 10,\n    queueLimit: 0\n};\nconst dbConfig = {\n    host: process.env.DB_HOST || 'localhost',\n    user: process.env.DB_USER || 'root',\n    password: process.env.DB_PASSWORD || '',\n    database: process.env.DB_NAME || 'auth_app',\n    waitForConnections: true,\n    connectionLimit: 10,\n    queueLimit: 0\n};\n// Create connection pool\nconst pool = mysql2_promise__WEBPACK_IMPORTED_MODULE_1__.createPool(dbConfig);\n// GET - Get user's meals\nasync function GET(request) {\n    let connection;\n    try {\n        console.log('üìò API: Getting meals...');\n        // Dynamic import of mysql2\n        const mysql = await getMysqlConnection();\n        connection = await mysql.createConnection(dbConfig);\n        console.log('üìò API: Connected to database');\n        const [rows] = await connection.execute('SELECT * FROM user_meals ORDER BY created_at DESC');\n        console.log('üìò API: Query executed, rows found:', rows.length);\n        // Close connection before returning\n        await connection.end();\n        console.log('üìò API: Connection closed');\n        // Return consistent structure that frontend expects\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: true,\n            meals: rows || [],\n            count: rows.length\n        });\n    } catch (error) {\n        console.error('‚ùå API Error:', error.message);\n        // Make sure connection is closed on error\n        if (connection) {\n            try {\n                await connection.end();\n            } catch (closeError) {\n                console.error('‚ùå Error closing connection:', closeError);\n            }\n        }\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: false,\n            error: error.message || 'Database connection failed',\n            meals: [] // Always return meals array even on error\n        }, {\n            status: 500\n        });\n    }\n}\n// POST - Create a new meal\n// export async function createMeal(request: any) {\nasync function createMeal(request) {\n    let connection;\n    try {\n        const body = await request.json();\n        console.log('üìò API: Creating new meal:', body);\n        // const [response] = await pool.execute(\n        //   \"INSERT INTO user_meals (meal_name, meal_type) VALUES (?, ?)\",\n        //   [\n        //     request.meal_name || 'Unnamed Meal',\n        //     request.meal_type || 'breakfast'\n        //   ]\n        // ) as any;\n        /////// OLD STUFF BELOW //////\n        const mysql = await getMysqlConnection();\n        connection = await mysql.createConnection(dbConfig);\n        const [result] = await connection.execute('INSERT INTO user_meals (meal_name, meal_type, total_calories, total_protein, total_carbs, total_fat) VALUES (?, ?, ?, ?, ?, ?)', [\n            // request.meal_name || 'Unnamed Meal',\n            // request.meal_type || 'breakfast',\n            // request.total_calories || 0,\n            // request.total_protein || 0,\n            // request.total_carbs || 0,\n            // request.total_fat || 0\n            body.meal_name || 'Unnamed Meal',\n            body.meal_type || 'breakfast',\n            body.total_calories || 0,\n            body.total_protein || 0,\n            body.total_carbs || 0,\n            body.total_fat || 0\n        ]);\n        // await connection.end();\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: true,\n            message: 'Meal created successfully',\n            mealId: result.insertId\n        });\n    } catch (error) {\n        console.error('‚ùå API Error:', error.message);\n        if (connection) {\n            try {\n                await connection.end();\n            } catch (closeError) {\n                console.error('‚ùå Error closing connection:', closeError);\n            }\n        }\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: false,\n            error: error.message || 'Failed to create meal'\n        }, {\n            status: 500\n        });\n    }\n}\n// DELETE - Delete a meal\nasync function DELETE(request) {\n    let connection;\n    try {\n        const { searchParams } = new URL(request.url);\n        const id = searchParams.get('id');\n        if (!id) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: false,\n                error: 'Meal ID is required'\n            }, {\n                status: 400\n            });\n        }\n        const mysql = await getMysqlConnection();\n        connection = await mysql.createConnection(dbConfig);\n        const [result] = await connection.execute('DELETE FROM user_meals WHERE id = ?', [\n            id\n        ]);\n        await connection.end();\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: true,\n            message: 'Meal deleted successfully',\n            affectedRows: result.affectedRows\n        });\n    } catch (error) {\n        console.error('‚ùå API Error:', error.message);\n        if (connection) {\n            try {\n                await connection.end();\n            } catch (closeError) {\n                console.error('‚ùå Error closing connection:', closeError);\n            }\n        }\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: false,\n            error: error.message || 'Failed to delete meal'\n        }, {\n            status: 500\n        });\n    }\n}\n// This ensures the route runs only on the server\nconst runtime = 'nodejs';\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/api/meals/route.ts\n"));

/***/ })

});